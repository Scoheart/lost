# Production environment configuration

server:
  port: 8080
  servlet:
    context-path: /api
  address: 0.0.0.0

file:
  upload:
    dir: ${user.dir}/uploads
    allowed-extensions: jpg,jpeg,png,gif,webp
    max-file-size: 5
    max-request-size: 10MB

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/lost_and_found?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: ${DB_PASSWORD:your_password_here}
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 连接池配置
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

  redis:
    host: localhost
    port: 6379
    password:
    database: 0
    timeout: 10000
    # Redis连接失败时不要让应用启动失败
    lettuce:
      shutdown-timeout: 0ms

  main:
    allow-circular-references: true

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.community.lostandfound.entity
  configuration:
    map-underscore-to-camel-case: true

jwt:
  secret: ${JWT_SECRET:LostAndFoundSecretKey123!@#$%^&*()_+AABBCCDDEEFFGGHHIIJJKKLLaabbccddeeffgghhiijjkk}
  expiration: 86400000 # 24 hours in milliseconds
  header: Authorization
  token-prefix: Bearer

logging:
  level:
    com.community.lostandfound: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.mybatis: WARN
    root: WARN
  file:
    name: ./logs/lost_and_found.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 健康检查端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized 